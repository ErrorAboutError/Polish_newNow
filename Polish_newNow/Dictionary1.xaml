<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Стили кнопок, которые не исползуются на главном окне MainPage,
    однако присутсвуют на других окнах/страницах-->
    <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="DarkRed"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="StyleBtnInMain">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="DarkCyan"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkRed"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkRed"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_2">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="AntiqueWhite"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="AntiqueWhite"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_3">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Blue" />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_4">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Turquoise"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MainButton">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="LightPink"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Width" Value="210"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SpecGoOut">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="195"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_LightBlue">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="LightBlue" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_LightSky">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="LightSkyBlue"  />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_LightGreen">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="LightGreen" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle_Red">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Width" Value="248"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBoxStyle">
        <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
        <Setter Property="Background" Value="Black"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="152"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" SnapsToDevicePixels="True">
                        <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                            <ScrollViewer Margin="30 7 5 5"
                                          x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>